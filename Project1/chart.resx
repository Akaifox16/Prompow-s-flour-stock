<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>