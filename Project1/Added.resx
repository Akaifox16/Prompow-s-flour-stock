<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>