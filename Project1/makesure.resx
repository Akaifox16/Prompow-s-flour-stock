<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>