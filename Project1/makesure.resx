<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>